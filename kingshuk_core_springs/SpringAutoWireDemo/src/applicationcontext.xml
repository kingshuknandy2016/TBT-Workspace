<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


	<!-- One Way to define Has Relationship 
	<bean id="iaddress"   class="com.spi.autowire.Address"> 
		<property name="doorno" value="181/B"></property> 
		<property name="street"  value="Bapuji Nagar."></property> 
		<property name="landmark" value="Shiva Temple"></property> 
		<property name="pincode" value="560026" ></property> 
		
		
	</bean> 
	
	<bean id="empBean" class="com.spi.autowire.Employee"> 
	 	<property name="firstname" value="Sidram"></property> 
		<property name="lastname" value="H"></property> 
		<property name="address" ref="iaddress"></property> 
	
	</bean> -->

	<!-- Second way to develop Has A relationships using autowire -->
	<bean id="address" class="com.spi.autowire.Address">
		<property name="doorno" value="181/B"></property>
		<property name="street" value="Bapuji Nagar."></property>
		<property name="landmark" value="Shiva Temple"></property>
		<property name="pincode" value="560026"></property>
	</bean>

	<!-- Autowire byName means, property name should be same as given id for 
		a bean -->
	<!-- adddress is name to Adddress class then you must give same name to 
		id. -->
	<!-- In case of ByType java bean property name can differ from id of your 
		bean -->


	<bean id="empBean" class="com.spi.autowire.Employee" autowire="byName">
		<property name="firstname" value="Sidram"></property>
		<property name="lastname" value="H"></property>
	</bean>


	<bean id="iAddress" class="com.spi.autowire.Address">
		<property name="doorno" value="181/B"></property>
		<property name="street" value="Bapuji Nagar."></property>
		<property name="landmark" value="Shiva Temple"></property>
		<property name="pincode" value="560026"></property>
	</bean>


	<!-- Circular Depenedeny Issues below-->
	<!-- 
	<bean id="a1" class="com.spi.circular.dependency.A1">
		<constructor-arg ref="bid" ></constructor-arg>
	</bean>


	<bean id="bid" class="com.spi.circular.dependency.B1">
		<constructor-arg  ref="a1"></constructor-arg>
	</bean> -->
	
	<!-- Circular Depenedeny Issues can slove below-->
	
	
	
	<bean id="a" class="com.spi.circular.dependency.A">
		<property name="b" ref="bref"></property>
	</bean>


	<bean id="bref" class="com.spi.circular.dependency.B">
		<property name="a" ref="a"></property>
	</bean>

		
	<bean id="emp1" class="com.spi.constructor.di.Employee">
		<constructor-arg value="32" type="int"></constructor-arg>			
	</bean>
	
	
	<bean id="emp2" class="com.spi.constructor.di.Employee">
		<constructor-arg value="32" type="int"></constructor-arg>
		<constructor-arg value="560026" type="int"></constructor-arg>			
	</bean>
	
	<bean id="emp3" class="com.spi.constructor.di.Employee">
		<constructor-arg value="32" type="int"></constructor-arg>
		<constructor-arg value="560026" type="int"></constructor-arg>
		<constructor-arg value="Siddu"></constructor-arg>			
	</bean>
	
	<!--  Index attribute to select paraemeters from constructor -->
	
	<!-- 
	<bean id="emp4" class="com.spi.constructor.di.Employee">
		<constructor-arg value="32" type="int" index="0"></constructor-arg>
		<constructor-arg value="560026" type="int" index="1"></constructor-arg>
		<constructor-arg value="HH" index="3"> </constructor-arg>			
		<constructor-arg value="Siddu" index="2"> </constructor-arg>
		<constructor-arg value="Bangalore" index="4"></constructor-arg>
	</bean>
	 -->
	
	<bean id="emp4" class="com.spi.constructor.di.Employee">
		<constructor-arg value="32" type="int" ></constructor-arg>
		<constructor-arg value="560026" type="int"> </constructor-arg>					
		<constructor-arg value="Siddu" > </constructor-arg>
		<constructor-arg value="HH" > </constructor-arg>
		<constructor-arg value="Bangalore" ></constructor-arg>
	</bean>	


</beans>
               
               
               